{{template "base" .}}

{{define "title"}}
    Add Account
{{end}}

{{define "content"}}
    <h2 class="mt-5">Add Account</h2>
    <hr>

    <form method="post" action="" name="user_form" id="user_form" class="needs-validation" autocomplete="off"
          novalidate="">
{{/*        <div class="mb-3">*/}}
{{/*            <label for="account_type" class="form-label">Account Type (saving/checking)</label>*/}}
{{/*            <input type="text" name="account_type" class="form-control" id="account_type" required=""*/}}
{{/*                   autocomplete="account_type-new">*/}}
{{/*        </div>*/}}
        <div>
            <label><input type="radio" name="status" value="saving" id="saving"
                          style="height:20px; width:20px; vertical-align: middle" required> Saving</label>
        </div>

        <div>
            <label><input type="radio" name="status" value="checking" id="checking"
                          style="height:20px; width:20px; vertical-align: middle;"> Checking</label>
        </div>

        <div class="mb-3">
            <label for="amount" class="form-label">Amount</label>
            <input type="text" name="amount" class="form-control" id="amount" required="" autocomplete="amount-new">
        </div>
        <hr>

        <div class="float-start">
            <a class="btn btn-primary" href="javascript:void(0);" onclick="val()" id="saveBtn">Add Account</a>
            <a class="btn btn-warning" href="/admin/all-customers/{{index .StringMap "id"}}/accounts" id="cancelBtn">Cancel</a>
        </div>

        <div class="clearfix"></div>
    </form>

{{end}}

{{define "js"}}
    <script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>

        function val() {
            let form = document.getElementById("user_form");
            let status = document.querySelector('[name=status]:checked');
            let token = localStorage.getItem("token");


            if (status === null) {
                Swal.fire("Error: Select deposit or withdrawal");
                return
            }

            if (form.checkValidity() === false) {
                this.event.preventDefault();
                this.event.stopPropagation();
                form.classList.add("was-validated");
                return
            }
            form.classList.add("was-validated");

            let payload = {
                account_type: status.value,
                amount: parseInt(document.getElementById("amount").value,10)
            }

            const requestOptions = {
                method: 'post',
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/json',
                    'Authorization': 'Bearer ' + token,
                },
                body: JSON.stringify(payload)
            }

            fetch("{{.API}}/api/admin/all-customers/{{index .StringMap "id"}}/accounts/0", requestOptions)
                .then(response => response.json())
                .then(function (data) {
                    if (data.error) {
                        Swal.fire("Error: " + data.message);
                    } else {
                        location.href = "/admin/all-customers/{{index .StringMap "id"}}/accounts";
                    }
                })
        }

    </script>
{{end}}