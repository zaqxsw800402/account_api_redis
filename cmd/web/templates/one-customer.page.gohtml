{{template "base" .}}

{{define "title"}}
    Add Customer
{{end}}

{{define "content"}}
    <h2 class="mt-5">Add Customer</h2>
    <hr>

    <form method="post" action="" name="user_form" id="user_form" class="needs-validation" autocomplete="off"
          novalidate="">
        <div class="mb-3">
            <label for="name" class="form-label">Name</label>
            <input type="text" name="first_name" class="form-control" id="name" required=""
                   autocomplete="first_name-new">
        </div>

        <div class="mb-3">
            <label for="city" class="form-label">City</label>
            <input type="text" name="city" class="form-control" id="city" required="" autocomplete="city-new">
        </div>

        <div class="mb-3">
            <label for="zipcode" class="form-label">Zipcode</label>
            <input type="text" name="zipcode" class="form-control" id="zipcode" required="" autocomplete="zipcode-new">
        </div>

        <div class="mb-3">
            <label for="date_of_birth" class="form-label">Date of Birth</label>
            <input type="text" name="date_of_birth" class="form-control" id="date_of_birth" required="" autocomplete="date_of_birth-new">
        </div>

        <hr>

        <div class="float-start">
            <a class="btn btn-primary" href="javascript:void(0);" onclick="val()" id="saveBtn">Save Changes</a>
            <a class="btn btn-warning" href="/admin/all-customers" id="cancelBtn">Cancel</a>
        </div>
        <div class="float-end">
            <a class="btn btn-danger d-none" href="javascript:void(0);" id="deleteBtn">Delete</a>
        </div>

        <div class="clearfix"></div>
    </form>

{{end}}

{{define "js"}}
    <script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        let token = localStorage.getItem("token");
        let id = window.location.pathname.split("/").pop();
        let delBtn = document.getElementById("deleteBtn");

        function val() {
            let form = document.getElementById("user_form");
            if (form.checkValidity() === false) {
                this.event.preventDefault();
                this.event.stopPropagation();
                form.classList.add("was-validated");
                return
            }
            form.classList.add("was-validated");


            let payload = {
                customer_id: parseInt(id, 10),
                name: document.getElementById("name").value,
                city: document.getElementById("city").value,
                zipcode: document.getElementById("zipcode").value,
                date_of_birth: document.getElementById("date_of_birth").value,
            }

            const requestOptions = {
                method: 'post',
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/json',
                    'Authorization': 'Bearer ' + token,
                },
                body: JSON.stringify(payload)
            }

            fetch("{{.API}}/api/admin/all-customers/edit/" + id, requestOptions)
                .then(response => response.json())
                .then(function (data) {
                    if (data.error) {
                        Swal.fire("Error: " + data.message);
                    } else {
                        location.href = "/admin/all-customers";
                    }
                })
        }

        document.addEventListener("DOMContentLoaded", function () {
            if (id !== "0") {
                if (id !== "{{.UserID}}") {
                    delBtn.classList.remove("d-none");
                }
                const requestOptions = {
                    method: 'post',
                    headers: {
                        'Accept': 'application/json',
                        'Content-Type': 'application/json',
                        'Authorization': 'Bearer ' + token,
                    }
                }

                fetch('{{.API}}/api/admin/all-customers/' + id, requestOptions)
                    .then(response => response.json())
                    .then(function (data) {
                        if (data) {
                            document.getElementById("name").value = data.name;
                            document.getElementById("city").value = data.city;
                            document.getElementById("email").zipcode = data.zipcode;
                            document.getElementById("email").date_of_birth = data.date_of_birth;
                        }
                    })
            }
        })

        delBtn.addEventListener("click", function () {
            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to undo this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Delete User'
            }).then((result) => {
                if (result.isConfirmed) {
                    const requestOptions = {
                        method: 'post',
                        headers: {
                            'Accept': 'application/json',
                            'Content-Type': 'application/json',
                            'Authorization': 'Bearer ' + token,
                        }
                    }

                    fetch("{{.API}}/api/admin/all-customers/delete/" + id, requestOptions)
                        .then(response => response.json)
                        .then(function (data) {
                            if (data.errors) {
                                Swal.fire("Error: " + data.message)
                            } else {
                                let jsonData = {
                                    action: "deleteUser",
                                    user_id: parseInt(id, 10)
                                };
                                socket.send(JSON.stringify(jsonData));

                                location.href = "/admin/all-users"
                            }
                        })
                }
            })
        })

    </script>
{{end}}