{{template "base" .}}

{{define "title"}}
    All Transaction records
{{end}}

{{define "content"}}
    <h2 class="mt-5">All Transaction records</h2>
    <hr>
    <div class="float-end">
        <a class="btn btn-danger" href="javascript:void(0);" id="deleteBtn">Delete Account</a>

    </div>
    <div class="clearfix"></div>

    <table id="user-table" class="table table-striped">
        <thead>
        <tr>
            <th>Transaction ID</th>
            <th>Transaction Type</th>
            <th>Transaction Amount</th>
            <th>New Balance</th>
            <th>Transaction Date</th>
        </tr>
        </thead>
        <tbody>

        </tbody>
    </table>

{{end}}

{{define "js"}}
    <script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
        let tbody = document.getElementById("user-table").getElementsByTagName("tbody")[0];
        let token = localStorage.getItem("token");
        let delBtn = document.getElementById("deleteBtn");

        document.addEventListener("DOMContentLoaded", function () {
            const requestOptions = {
                method: 'get',
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/json',
                    'Authorization': 'Bearer ' + token,
                },
            }

            fetch("{{.API}}/api/admin/all-customers/{{index .StringMap "id"}}/accounts/{{index .StringMap "account_id"}}/transactions", requestOptions)
                .then(response => response.json())
                .then(function (data) {
                    if (data) {
                        data.forEach(function (i) {
                            let newRow = tbody.insertRow();
                            let newCell = newRow.insertCell();

                            // newCell.innerHTML = `<a href="/admin/all-customers/${i.customer_id}/accounts/${i.account_id}">ID: ${i.account_id}</a>`
                            item = document.createTextNode(i.transaction_id);
                            newCell.appendChild(item);

                            newCell = newRow.insertCell();
                            item = document.createTextNode(i.transaction_type);
                            newCell.appendChild(item);

                            newCell = newRow.insertCell();
                            item = document.createTextNode(i.transaction_amount);
                            newCell.appendChild(item);

                            newCell = newRow.insertCell();
                            item = document.createTextNode(i.new_balance);
                            newCell.appendChild(item);

                            newCell = newRow.insertCell();
                            item = document.createTextNode(i.transaction_date);
                            newCell.appendChild(item);

                        });
                    } else {
                        let newRow = tbody.insertRow();
                        let newCell = newRow.insertCell();
                        newCell.setAttribute("colspan", "5");
                        newCell.innerHTML = "no data available";
                    }
                })
        })

        delBtn.addEventListener("click", function () {
            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to undo this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Delete Account ID: {{index .StringMap "account_id"}}'
            }).then((result) => {
                if (result.isConfirmed) {
                    const requestOptions = {
                        method: 'post',
                        headers: {
                            'Accept': 'application/json',
                            'Content-Type': 'application/json',
                            'Authorization': 'Bearer ' + token,
                        }
                    }

                    fetch("{{.API}}/api/admin/all-customers/" + {{index .StringMap "id"}}+"/accounts/delete/" +{{index .StringMap "account_id"}}, requestOptions)
                        .then(response => response.json)
                        .then(function (data) {
                            if (data.errors) {
                                Swal.fire("Error: " + data.message)
                            } else {
                                location.href = "/admin/all-customers/" + {{index .StringMap "id"}}+"/accounts"
                            }
                        })
                }
            })
        })

    </script>
{{end}}