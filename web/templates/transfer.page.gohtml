{{template "base" .}}

{{define "title"}}
    Transfer money
{{end}}

{{define "content"}}
    <h2 class="mt-5">Transfer money</h2>
    <hr>

    <form method="post" action="" name="user_form" id="user_form" class="needs-validation" autocomplete="off"
          novalidate="">

        <div class="mb-3">
            <label for="target_account_id" class="form-label">Target Account ID</label>
            <input type="text" name="target_account_id" class="form-control" id="target_account_id" required=""
                   autocomplete="target_account_id-new">
        </div>

        <div class="mb-3">
            <label for="customer_id" class="form-label">Your Customer ID</label>
            <input type="text" name="customer_id" class="form-control" id="customer_id" required=""
                   autocomplete="customer_id-new">
        </div>

        <div class="mb-3">
            <label for="account_id" class="form-label">Your Account ID</label>
            <input type="text" name="account_id" class="form-control" id="account_id" required=""
                   autocomplete="account_id-new">
        </div>

        <div class="mb-3">
            <label for="amount" class="form-label">Amount</label>
            <input type="text" name="amount" class="form-control" id="amount" required=""
                   autocomplete="amount-new">
        </div>
        <hr>

        <div class="float-start">
            <a class="btn btn-primary" href="javascript:void(0);" onclick="val()" id="saveBtn">Just Do It</a>
            <a class="btn btn-warning" href="/" id="cancelBtn">Cancel</a>
        </div>

        <div class="clearfix"></div>
    </form>


{{end}}

{{define "js"}}
    <script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        let token = localStorage.getItem("token");


        function val() {
            let form = document.getElementById("user_form");
            let customer_id = document.getElementById("customer_id").value;
            let account_id = document.getElementById("account_id").value;
            let target_account_id = document.getElementById("target_account_id").value;

            if (form.checkValidity() === false) {
                this.event.preventDefault();
                this.event.stopPropagation();
                form.classList.add("was-validated");
                return
            }
            form.classList.add("was-validated");

            let payload = {
                customer_id: parseInt(document.getElementById("customer_id").value, 10),
                account_id: parseInt(document.getElementById("account_id").value, 10),
                amount: parseInt(document.getElementById("amount").value, 10),
            }

            const requestOptions = {
                method: 'post',
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/json',
                    'Authorization': 'Bearer ' + token,
                },
                body: JSON.stringify(payload)
            }

            fetch("{{.API}}/api/admin/check-customer_id", requestOptions)
                .then(response => response.json())
                .then(function (data) {
                    if (data.error) {
                        if (data.message === "must be numbers") {
                            Swal.fire(data.message);
                            return
                        }
                        Swal.fire("It is not your account!");
                    }
                    else {
                        Swal.fire({
                            title: 'Transfer money',
                            text: 'from id: ' + account_id + ' to id: ' + target_account_id,
                            icon: 'warning',
                            showCancelButton: true,
                            confirmButtonColor: '#3085d6',
                            cancelButtonColor: '#d33',
                            confirmButtonText: 'Do it',
                        }).then((result) => {
                                if (result.isConfirmed) {
                                    transfer()
                                } else {
                                }
                            }
                        )
                    }
                })
        }


        function transfer() {
            let customer_id = document.getElementById("customer_id").value;
            let account_id = document.getElementById("account_id").value;

            let payload = {
                customer_id: parseInt(document.getElementById("customer_id").value, 10),
                account_id: parseInt(document.getElementById("account_id").value, 10),
                amount: parseInt(document.getElementById("amount").value, 10),
                target_account_id: parseInt(document.getElementById("target_account_id").value, 10),
            }

            const requestOptions = {
                method: 'post',
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/json',
                    'Authorization': 'Bearer ' + token,
                },
                body: JSON.stringify(payload)
            }

            fetch("{{.API}}/api/admin/transfer", requestOptions)
                .then(response => response.json())
                .then(function (data) {
                    if (data.error) {
                        Swal.fire(data.message);
                    } else {
                        location.href = "/admin/all-customers/" + customer_id + "/accounts/" + account_id + "/transactions";
                    }
                })
        }

    </script>
{{end}}